#!/usr/bin/env python
PACKAGE = "v2x_simulation"
import roslib; roslib.load_manifest(PACKAGE)
from math import pi
from dynamic_reconfigure.parameter_generator_catkin import *


gen = ParameterGenerator()
# int_t, double_t, str_t, bool_t 
#'name', 'type', 'level', 'description', 'default', 'min', 'max'
Mission_enum = gen.enum([ gen.const("Mission_Hold",      int_t, 0, " Hold"),
                        gen.const("Mission_Init",     int_t, 1, " Init"),
                        gen.const("Mission_Stop",      int_t, 2, "Stop"),
                        gen.const("Mission_Complete",      int_t, 3, "Complete"),
                        gen.const("Testing",      int_t, 4, "Testing")],
                      "An enum to set size")

gen.add("Mission_Status", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 4, edit_method=Mission_enum)


waypoint_enum = gen.enum([ gen.const("Normal",      int_t, 0, "normal node point"),
                        gen.const("Start",     int_t, 1, "start node point"),
                        gen.const("Goal",      int_t, 2, "goal node point")],
                      "An enum to set size")

gen.add("Waypoint_Select", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 2, edit_method=waypoint_enum)

insert_delete_enum = gen.enum([ gen.const("Insert",      int_t, 0, "insert waypoint"),
                        gen.const("Delete",     int_t, 1, "delete waypoint")],
                      "An enum to set size")

gen.add("Waypoint_editting", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 1, edit_method=insert_delete_enum)

exit(gen.generate(PACKAGE, "v2x_simulation", "test1"))