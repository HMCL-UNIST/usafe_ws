
classdef Gpgsa < ros.Message
    %Gpgsa MATLAB implementation of nmea_msgs/Gpgsa
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'nmea_msgs/Gpgsa' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '94a6ef4a36d322374b16097a5d03433e' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'MessageId' 'AutoManualMode' 'FixMode' 'SvIds' 'Pdop' 'Hdop' 'Vdop' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'message_id' 'auto_manual_mode' 'fix_mode' 'sv_ids' 'pdop' 'hdop' 'vdop' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        MessageId
        AutoManualMode
        FixMode
        SvIds
        Pdop
        Hdop
        Vdop
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'Header')
            obj.Header = val;
        end
        function set.MessageId(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'MessageId');
            obj.MessageId = char(val);
        end
        function set.AutoManualMode(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'AutoManualMode');
            obj.AutoManualMode = char(val);
        end
        function set.FixMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'FixMode');
            obj.FixMode = uint8(val);
        end
        function set.SvIds(obj, val)
            validClasses = {'numeric'};
            if isempty(val)
                % Allow empty [] input
                val = uint8.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'SvIds');
            obj.SvIds = uint8(val);
        end
        function set.Pdop(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'Pdop');
            obj.Pdop = single(val);
        end
        function set.Hdop(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'Hdop');
            obj.Hdop = single(val);
        end
        function set.Vdop(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Gpgsa', 'Vdop');
            obj.Vdop = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.nmea_msgs.Gpgsa.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.nmea_msgs.Gpgsa;
            obj.reload(strObj);
        end
    end
end
