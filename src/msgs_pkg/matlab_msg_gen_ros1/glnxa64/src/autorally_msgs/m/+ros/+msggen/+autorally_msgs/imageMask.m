
classdef imageMask < ros.Message
    %imageMask MATLAB implementation of autorally_msgs/imageMask
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'autorally_msgs/imageMask' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'da71ef8be852ae3b57ef13c4fd86dd46' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Points' 'Lines' 'Rois' 'Sender' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'points' 'lines' 'rois' 'sender' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 'ros.msggen.autorally_msgs.point2D' ...
			 'ros.msggen.autorally_msgs.line2D' ...
			 'ros.msggen.sensor_msgs.RegionOfInterest' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Points
        Lines
        Rois
        Sender
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'imageMask', 'Header')
            obj.Header = val;
        end
        function set.Points(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.autorally_msgs.point2D.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.autorally_msgs.point2D'};
            validateattributes(val, validClasses, validAttributes, 'imageMask', 'Points')
            obj.Points = val;
        end
        function set.Lines(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.autorally_msgs.line2D.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.autorally_msgs.line2D'};
            validateattributes(val, validClasses, validAttributes, 'imageMask', 'Lines')
            obj.Lines = val;
        end
        function set.Rois(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.sensor_msgs.RegionOfInterest.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.sensor_msgs.RegionOfInterest'};
            validateattributes(val, validClasses, validAttributes, 'imageMask', 'Rois')
            obj.Rois = val;
        end
        function set.Sender(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'imageMask', 'Sender');
            obj.Sender = char(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.autorally_msgs.imageMask.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.autorally_msgs.imageMask;
            obj.reload(strObj);
        end
    end
end
