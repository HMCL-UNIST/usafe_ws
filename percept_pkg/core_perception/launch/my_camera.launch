<launch>

  <!-- 
    # lidar detector #
    In:  /points_no_ground [sensor_msgs::PointCloud2]
    Out: /cluster_centroids [autoware_msgs::Centroids]
    Out: /detection/lidar_detector/cloud_clusters [autoware_msgs::CloudClusterArray]
    Out: /detection/lidar_detector/objects [autoware_msgs::DetectedObjectArray]
    Out: /detection/lidar_detector/objects_filtered [autoware_msgs::DetectedObjectArray]
    Out: /points_cluster [sensor_msgs::PointCloud2]
    Out: /points_ground [sensor_msgs::PointCloud2]
    Out: /points_lanes [sensor_msgs::PointCloud2]
  -->

  <arg name='use_camera_right' default='false'/>
  <arg name='use_camera_left' default='false'/> 

  <!--
    # vision detection #
    In:  /image_raw [sensor_msgs::Image]
    Out: /detection/image_detector/objects [autoware_msgs::DetectedObjectArray]
  -->
  <include file='$(find vision_darknet_detect)/launch/vision_yolo3_detect.launch'>
    <arg name='pretrained_model_file' value='$(env CARLA_AUTOWARE_CONTENTS)/config/yolov3/yolov3.weights'/>
    <arg name='names_file' value='$(env CARLA_AUTOWARE_CONTENTS)/config/yolov3/coco.names'/>
    <arg name='score_threshold' value='0.50'/>
    <arg name='nms_threshold' value='0.30'/>
    <arg name='use_camera_right' value='$(arg use_camera_right)'/>
    <arg name='use_camera_left' value='$(arg use_camera_left)'/>  
  </include>

  <!--
    # vision tracker #
    In:  /detection/image_detector/objects [autoware_msgs::DetectedObjectArray]
    Out: /detection/image_tracker/objects [autoware_msgs::DetectedObjectArray]
  -->
  <include file='$(find vision_beyond_track)/launch/vision_beyond_track.launch'>
    <arg name='objects_topic_src' value='/detection/image_detector/objects'/>
  </include>

  <node pkg='detected_objects_visualizer' type='visualize_rects' name='image_tracker_rects' output='screen'>
    <param name='image_src' value='/image_raw'/>
    <param name='image_out' value='/image_tracker_rects'/>
    <param name='object_src' value='/detection/image_tracker/objects'/>
  </node>

  


</launch>
