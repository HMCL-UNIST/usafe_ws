
classdef VehicleStatus < ros.Message
    %VehicleStatus MATLAB implementation of hmcl_msgs/VehicleStatus
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hmcl_msgs/VehicleStatus' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '257eaa74ca2595e01127664962d58d27' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'SteeringInfo' 'SccInfo' 'Wheelspeed' 'GearInfo' 'LightInfo' 'RemoteButtonInfo' 'AutoMode' 'EmsMode' 'XAcceleration' 'YAcceleration' 'YawRate' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'steering_info' 'scc_info' 'wheelspeed' 'gear_info' 'light_info' 'remote_button_info' 'auto_mode' 'ems_mode' 'x_acceleration' 'y_acceleration' 'yaw_rate' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 'ros.msggen.hmcl_msgs.VehicleSteering' ...
			 'ros.msggen.hmcl_msgs.VehicleSCC' ...
			 'ros.msggen.hmcl_msgs.VehicleWheelSpeed' ...
			 'ros.msggen.hmcl_msgs.VehicleGear' ...
			 'ros.msggen.hmcl_msgs.VehicleLight' ...
			 'ros.msggen.hmcl_msgs.RemoteButton' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        SteeringInfo
        SccInfo
        Wheelspeed
        GearInfo
        LightInfo
        RemoteButtonInfo
        AutoMode
        EmsMode
        XAcceleration
        YAcceleration
        YawRate
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'Header')
            obj.Header = val;
        end
        function set.SteeringInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.VehicleSteering'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'SteeringInfo')
            obj.SteeringInfo = val;
        end
        function set.SccInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.VehicleSCC'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'SccInfo')
            obj.SccInfo = val;
        end
        function set.Wheelspeed(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.VehicleWheelSpeed'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'Wheelspeed')
            obj.Wheelspeed = val;
        end
        function set.GearInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.VehicleGear'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'GearInfo')
            obj.GearInfo = val;
        end
        function set.LightInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.VehicleLight'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'LightInfo')
            obj.LightInfo = val;
        end
        function set.RemoteButtonInfo(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.hmcl_msgs.RemoteButton'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'RemoteButtonInfo')
            obj.RemoteButtonInfo = val;
        end
        function set.AutoMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'AutoMode');
            obj.AutoMode = uint8(val);
        end
        function set.EmsMode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'EmsMode');
            obj.EmsMode = uint8(val);
        end
        function set.XAcceleration(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'XAcceleration');
            obj.XAcceleration = double(val);
        end
        function set.YAcceleration(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'YAcceleration');
            obj.YAcceleration = double(val);
        end
        function set.YawRate(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'VehicleStatus', 'YawRate');
            obj.YawRate = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hmcl_msgs.VehicleStatus.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hmcl_msgs.VehicleStatus;
            obj.reload(strObj);
        end
    end
end
