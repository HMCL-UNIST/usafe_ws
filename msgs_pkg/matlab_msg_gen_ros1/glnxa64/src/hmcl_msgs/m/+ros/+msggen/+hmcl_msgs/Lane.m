
classdef Lane < ros.Message
    %Lane MATLAB implementation of hmcl_msgs/Lane
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'hmcl_msgs/Lane' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = 'd39725cdc21d64784ecdb0c128d652a2' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Waypoints' 'Trafficlights' 'Speedbumps' 'LaneId' 'LaneChangeFlag' 'SpeedLimit' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'waypoints' 'trafficlights' 'speedbumps' 'lane_id' 'lane_change_flag' 'speed_limit' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
			 'ros.msggen.hmcl_msgs.Waypoint' ...
			 'ros.msggen.hmcl_msgs.Trafficlight' ...
			 'ros.msggen.hmcl_msgs.Waypoint' ...
			 '' ...
			 '' ...
			 '' ...
			 } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Waypoints
        Trafficlights
        Speedbumps
        LaneId
        LaneChangeFlag
        SpeedLimit
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'Header')
            obj.Header = val;
        end
        function set.Waypoints(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.hmcl_msgs.Waypoint.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.hmcl_msgs.Waypoint'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'Waypoints')
            obj.Waypoints = val;
        end
        function set.Trafficlights(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.hmcl_msgs.Trafficlight.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.hmcl_msgs.Trafficlight'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'Trafficlights')
            obj.Trafficlights = val;
        end
        function set.Speedbumps(obj, val)
            if isempty(val)
                % Allow empty [] input
                val = ros.msggen.hmcl_msgs.Waypoint.empty(0, 1);
            end
            val = val(:);
            validAttributes = {'vector'};
            validClasses = {'ros.msggen.hmcl_msgs.Waypoint'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'Speedbumps')
            obj.Speedbumps = val;
        end
        function set.LaneId(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'LaneId');
            obj.LaneId = int32(val);
        end
        function set.LaneChangeFlag(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'LaneChangeFlag');
            obj.LaneChangeFlag = logical(val);
        end
        function set.SpeedLimit(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'Lane', 'SpeedLimit');
            obj.SpeedLimit = single(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.hmcl_msgs.Lane.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.hmcl_msgs.Lane;
            obj.reload(strObj);
        end
    end
end
